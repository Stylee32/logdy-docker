#!/bin/sh

set -e
LOGDY_CMD="--no-analytics --no-updates --ui-ip=0.0.0.0 --bulk-window=1000"

echo "Configuring logdy service"

if [ -z $LOGDY_PORT ]; then LOGDY_CMD=" $LOGDY_CMD --port=8080"; else LOGDY_CMD=" $LOGDY_CMD --port=$LOGDY_PORT"; fi
if [ ! -z $LOGDY_PASS ]; then LOGDY_CMD=" $LOGDY_CMD --ui-pass=$LOGDY_PASS"; fi
if [ ! -z $LOGDY_CONFIG ]; then LOGDY_CMD=" $LOGDY_CMD --config=$LOGDY_CONFIG"; fi
if [ -z $LOGDY_MAX_MESSAGE ]; then LOGDY_CMD=" $LOGDY_CMD --max-message-count=1000"; else LOGDY_CMD=" $LOGDY_CMD --max-message-count=$LOGDY_MAX_MESSAGE"; fi

if [ -z $LOGDY_API_KEY ]; then
  LOGDY_API_KEY=$(dd if=/dev/urandom bs=1 count=32 2>/dev/null | base64 -w 0 | rev | cut -b 2- | rev)
  LOGDY_CMD=" $LOGDY_CMD --api-key=$LOGDY_API_KEY"
  echo "Logdy API key: $LOGDY_API_KEY"
else
  LOGDY_CMD=" $LOGDY_CMD --api-key=$LOGDY_API_KEY"
fi

if [[ "$LOGDY_MODE" == "follow" ]]; then 
  LOGDY_CMD=" $LOGDY_CMD follow"
  if [ -z $LOGDY_FOLLOW_FILES ]; then LOGDY_CMD=" $LOGDY_CMD /data/*.log"; else LOGDY_CMD=" $LOGDY_CMD $LOGDY_FOLLOW_FILES"; fi
else
  LOGDY_CMD=" $LOGDY_CMD socket"
  if [ -z $LOGDY_SOCKET_PORTS ]; then LOGDY_CMD=" $LOGDY_CMD 10800"; else LOGDY_CMD=" $LOGDY_CMD $LOGDY_SOCKET_PORTS"; fi
fi

echo "Starting logdy service with configuration: $LOGDY_CMD"

/usr/local/bin/logdy $LOGDY_CMD
